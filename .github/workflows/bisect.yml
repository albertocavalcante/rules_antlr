name: Bazel Bisect

on:
  workflow_dispatch:
    inputs:
      failing_target:
        description: "Target that is failing (for bisect)"
        required: true
        default: "//..."
        type: string
      bisect_range:
        description: "Bisect range (e.g. 6.5.0..7.0.0)"
        required: true
        default: "6.5.0..7.0.0"
        type: string
      extra_args:
        description: "Extra arguments for the bisect command"
        required: false
        default: "--config=ci"
        type: string

jobs:
  bisect:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: "11"

      - name: Mount Bazel Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/bazel
            ~/.cache/bazel-repo
            ~/.cache/bazelisk
          key: ${{ runner.os }}-bazel-bisect-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-bazel-bisect-
            ${{ runner.os }}-bazel-

      - name: Verify Bazel installation
        run: bazelisk version

      # First, build examples (using normal bazelisk, not with bisect)
      - name: Build examples as prerequisites
        run: |
          cd examples
          bazelisk build --config ci //antlr2/Cpp/... //antlr2/Calc/... //antlr2/Python/... //antlr3/Cpp/... //antlr3/Java/... //antlr3/Python2/... //antlr3/Python3/... //antlr4/Cpp/... //antlr4/Go/... //antlr4/Java/... //antlr4/Python2/... //antlr4/Python3/...
          cd ..

      # Then, build antlr4-opt (using normal bazelisk, not with bisect)
      - name: Build antlr4-opt as prerequisite
        run: |
          cd examples/antlr4-opt
          bazelisk build --config ci //...
          cd ../..

      # Run the actual bisect on the failing target
      - name: Run Bazel Bisect
        id: bisect
        run: |
          echo "Running bisect with range: ${{ inputs.bisect_range }} for target: ${{ inputs.failing_target }}"

          # Create log directory
          mkdir -p logs

          # Run the bisect command (after prerequisites have been built)
          echo "::group::Bisect Output"
          set +e  # Don't exit on error since we expect failures
          bazelisk --bisect=${{ inputs.bisect_range }} test ${{ inputs.extra_args }} ${{ inputs.failing_target }} 2>&1 | tee logs/bisect.log
          BISECT_EXIT_CODE=$?
          echo "::endgroup::"

          # Extract and highlight the commit that introduced the failure
          echo "::group::Bisect Result"
          if grep -q "first bad version" logs/bisect.log; then
            echo "✅ Found the commit that introduced the failure:"
            grep -A 5 "first bad version" logs/bisect.log
            # Save the bad commit for artifacts/summary
            grep -A 5 "first bad version" logs/bisect.log > logs/bisect_result.txt
          else
            echo "⚠️ Bisect did not complete successfully. Check the full log."
            echo "Bisect did not identify the problematic commit." > logs/bisect_result.txt
            echo "Exit code: $BISECT_EXIT_CODE"
          fi
          echo "::endgroup::"

          # Create a markdown summary
          echo "## Bazel Bisect Result" > $GITHUB_STEP_SUMMARY
          echo "Target: \`${{ inputs.failing_target }}\`" >> $GITHUB_STEP_SUMMARY
          echo "Range: \`${{ inputs.bisect_range }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if grep -q "first bad version" logs/bisect.log; then
            echo "### ✅ Found problematic commit" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            grep -A 5 "first bad version" logs/bisect.log >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "### ⚠️ Bisect inconclusive" >> $GITHUB_STEP_SUMMARY
            echo "The bisect process did not identify a specific commit." >> $GITHUB_STEP_SUMMARY
            echo "Check the logs for more details." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload Bisect Results
        uses: actions/upload-artifact@v4
        with:
          name: bisect-logs
          path: logs/
          retention-days: 14
          include-hidden-files: true

      - name: Shutdown Bazel
        run: bazelisk shutdown
