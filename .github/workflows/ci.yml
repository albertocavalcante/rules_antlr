name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "LICENSE"
      - ".github/*.md"
  pull_request_target:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "LICENSE"
      - ".github/*.md"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_authorization:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      pull-requests: read  # Needed to check PR labels

    outputs:
      is_authorized: ${{ steps.check.outputs.is_authorized }}

    steps:
      - name: Check authorization
        id: check
        run: |
          # For push to main or workflow_dispatch, always authorize
          if [[ "${{ github.event_name }}" == "push" || "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "is_authorized=true" >> $GITHUB_OUTPUT
            echo "Authorized: push or workflow_dispatch event"
            exit 0
          fi
          
          # For PRs, check various authorization criteria
          if [[ "${{ github.event_name }}" == "pull_request_target" ]]; then
            # Auto-authorize if PR is from the repository owner
            if [[ "${{ github.event.pull_request.head.repo.owner.login }}" == "${{ github.repository_owner }}" ]]; then
              echo "is_authorized=true" >> $GITHUB_OUTPUT
              echo "Authorized: PR from repository owner"
              exit 0
            fi
            
            # Auto-authorize if PR is from a repository member/collaborator
            if [[ "${{ github.event.pull_request.author_association }}" == "OWNER" || 
                  "${{ github.event.pull_request.author_association }}" == "MEMBER" || 
                  "${{ github.event.pull_request.author_association }}" == "COLLABORATOR" ]]; then
              echo "is_authorized=true" >> $GITHUB_OUTPUT
              echo "Authorized: PR from repository member/collaborator"
              exit 0
            fi
            
            # Check for the authorized-secrets label for external contributors
            if [[ "${{ contains(github.event.pull_request.labels.*.name, 'authorized-secrets') }}" == "true" ]]; then
              echo "is_authorized=true" >> $GITHUB_OUTPUT
              echo "Authorized: PR with authorized-secrets label"
              exit 0
            fi
            
            # Not authorized
            echo "is_authorized=false" >> $GITHUB_OUTPUT
            echo "Not authorized: PR from external contributor without proper authorization"
          fi

  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up JDK 11
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
        with:
          distribution: zulu
          java-version: "11"

      - name: Verify Bazel installation
        run: bazelisk version

      - name: Build examples
        shell: bash
        run: |
          cd examples
          bazelisk build \
            --config ci \
            --config remote-cache \
            --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_API_KEY }} \
            //antlr2/Cpp/... \
            //antlr2/Calc/... \
            //antlr2/Python/... \
            //antlr3/Cpp/... \
            //antlr3/Java/... \
            //antlr3/Python2/... \
            //antlr3/Python3/... \
            //antlr4/Cpp/... \
            //antlr4/Go/... \
            //antlr4/Java/... \
            //antlr4/Python2/... \
            //antlr4/Python3/...

      - name: Build antlr4-opt
        shell: bash
        run: |
          cd examples/antlr4-opt
          bazelisk build \
            --config ci \
            --config remote-cache \
            --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_API_KEY }} \
            //...

      - name: Run tests
        shell: bash
        run: |
          bazelisk test \
            --config ci \
            --config remote-cache \
            --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_API_KEY }} \
            //...

      - name: Shutdown Bazel
        shell: bash
        run: bazelisk shutdown
